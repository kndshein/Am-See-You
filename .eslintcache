[{"/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/index.js":"1","/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/reportWebVitals.js":"2","/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/App.js":"3","/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/pages/AllMovies.js":"4","/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/pages/WatchedMovies.js":"5","/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/components/MoviesList.js":"6","/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/components/Nav.js":"7","/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/components/SingleMovie.js":"8"},{"size":593,"mtime":1611015284557,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610599688427,"results":"11","hashOfConfig":"10"},{"size":493,"mtime":1611015274953,"results":"12","hashOfConfig":"10"},{"size":1544,"mtime":1610999516095,"results":"13","hashOfConfig":"10"},{"size":137,"mtime":1610997619163,"results":"14","hashOfConfig":"10"},{"size":1303,"mtime":1611086668813,"results":"15","hashOfConfig":"10"},{"size":524,"mtime":1611086194961,"results":"16","hashOfConfig":"10"},{"size":6879,"mtime":1611097459542,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"hb4goz",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/index.js",[],["37","38"],"/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/reportWebVitals.js",[],"/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/App.js",[],"/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/pages/AllMovies.js",[],"/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/pages/WatchedMovies.js",[],"/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/components/MoviesList.js",["39"],"import React from \"react\";\n\nimport SingleMovie from \"../components/SingleMovie\";\n\nconst MoviesList = (props) => {\n  const [moviesListState, setMoviesListState] = React.useState(null);\n\n  const { REACT_APP_APIKEY } = process.env;\n\n  // const apiKey = \"643214fbabd864e3d0973b3b771ffa40\";\n\n  const getAllMovies = () => {\n    // generate a promise for each movies data using async callback to map\n    const arrayOfPromises = props.moviesList.map(async (movie) => {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/${movie.type}/${movie.id}?api_key=${REACT_APP_APIKEY}&language=en-US`\n      );\n      const data = await response.json();\n      return data; // each loop will return the data in the new array\n    });\n    //After map loop complete return the array of promises it generated\n    return arrayOfPromises;\n  };\n\n  React.useEffect(() => {\n    //Pass the array of promises to Promise.all to make sure they have all resolved\n    Promise.all(getAllMovies())\n      // The returned values from promise.all can then be handled in the callback via .then that'll run when Promise.all complete\n      .then((arrayOfData) => setMoviesListState(arrayOfData));\n  }, []);\n\n  return (\n    <>\n      <SingleMovie moviesListState={moviesListState} />\n    </>\n  );\n};\nexport default MoviesList;\n","/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/components/Nav.js",[],"/home/kndshein/Documents/General Assembly/Unit 2/projecttwo/src/components/SingleMovie.js",["40","41","42"],"import React from \"react\";\nimport { Frame, Scroll } from \"framer\";\n\nconst SingleMovie = (props) => {\n  console.log(\"singleMovie props\", props);\n\n  const [toggleState, setToggleState] = React.useState(null);\n\n  const handleClick = (index) => {\n    setToggleState({ active: index });\n    if (toggleState?.active === index) {\n      setToggleState({ active: null });\n    }\n  };\n\n  const loaded = () => {\n    var edgeSize = 200;\n    var timer = null;\n\n    window.addEventListener(\"mousemove\", handleMousemove, false);\n\n    function handleMousemove(event) {\n      // NOTE: Much of the information here, with regard to document dimensions,\n      // viewport dimensions, and window scrolling is derived from JavaScript.info.\n      // I am consuming it here primarily as NOTE TO SELF.\n      // --\n      // Read More: https://javascript.info/size-and-scroll-window\n      // --\n      // CAUTION: The viewport and document dimensions can all be CACHED and then\n      // recalculated on window-resize events (for the most part). I am keeping it\n      // all here in the mousemove event handler to remove as many of the moving\n      // parts as possible and keep the demo as simple as possible.\n\n      // Get the viewport-relative coordinates of the mousemove event.\n      var viewportX = event.clientX;\n\n      // Get the viewport dimensions.\n      var viewportWidth = document.documentElement.clientWidth;\n\n      // Next, we need to determine if the mouse is within the \"edge\" of the\n      // viewport, which may require scrolling the window. To do this, we need to\n      // calculate the boundaries of the edge in the viewport (these coordinates\n      // are relative to the viewport grid system).\n      var edgeLeft = edgeSize;\n      var edgeRight = viewportWidth - edgeSize;\n\n      var isInLeftEdge = viewportX < edgeLeft;\n      var isInRightEdge = viewportX > edgeRight;\n\n      // If the mouse is not in the viewport edge, there's no need to calculate\n      // anything else.\n      if (!(isInLeftEdge || isInRightEdge)) {\n        clearTimeout(timer);\n        return;\n      }\n\n      // If we made it this far, the user's mouse is located within the edge of the\n      // viewport. As such, we need to check to see if scrolling needs to be done.\n\n      // Get the document dimensions.\n      // --\n      // NOTE: The various property reads here are for cross-browser compatibility\n      // as outlined in the JavaScript.info site (link provided above).\n      var documentWidth = Math.max(\n        document.body.scrollWidth,\n        document.body.offsetWidth,\n        document.body.clientWidth,\n        document.documentElement.scrollWidth,\n        document.documentElement.offsetWidth,\n        document.documentElement.clientWidth\n      );\n\n      // Calculate the maximum scroll offset in each direction. Since you can only\n      // scroll the overflow portion of the document, the maximum represents the\n      // length of the document that is NOT in the viewport.\n      var maxScrollX = documentWidth - viewportWidth;\n\n      // As we examine the mousemove event, we want to adjust the window scroll in\n      // immediate response to the event; but, we also want to continue adjusting\n      // the window scroll if the user rests their mouse in the edge boundary. To\n      // do this, we'll invoke the adjustment logic immediately. Then, we'll setup\n      // a timer that continues to invoke the adjustment logic while the window can\n      // still be scrolled in a particular direction.\n      // --\n      // NOTE: There are probably better ways to handle the ongoing animation\n      // check. But, the point of this demo is really about the math logic, not so\n      // much about the interval logic.\n      (function checkForWindowScroll() {\n        clearTimeout(timer);\n\n        if (adjustWindowScroll()) {\n          timer = setTimeout(checkForWindowScroll, 30);\n        }\n      })();\n\n      // Adjust the window scroll based on the user's mouse position. Returns True\n      // or False depending on whether or not the window scroll was changed.\n      function adjustWindowScroll() {\n        // Get the current scroll position of the document.\n        var currentScrollX = window.pageXOffset;\n\n        // Determine if the window can be scrolled in any particular direction.\n        var canScrollLeft = currentScrollX > 0;\n        var canScrollRight = currentScrollX < maxScrollX;\n\n        // Since we can potentially scroll in two directions at the same time,\n        // let's keep track of the next scroll, starting with the current scroll.\n        // Each of these values can then be adjusted independently in the logic\n        // below.\n        var nextScrollX = currentScrollX;\n\n        // As we examine the mouse position within the edge, we want to make the\n        // incremental scroll changes more \"intense\" the closer that the user\n        // gets the viewport edge. As such, we'll calculate the percentage that\n        // the user has made it \"through the edge\" when calculating the delta.\n        // Then, that use that percentage to back-off from the \"max\" step value.\n        var maxStep = 50;\n\n        // Should we scroll left?\n        if (isInLeftEdge && canScrollLeft) {\n          var intensity = (edgeLeft - viewportX) / edgeSize;\n\n          nextScrollX = nextScrollX - maxStep * intensity;\n\n          // Should we scroll right?\n        } else if (isInRightEdge && canScrollRight) {\n          var intensity = (viewportX - edgeRight) / edgeSize;\n\n          nextScrollX = nextScrollX + maxStep * intensity;\n        }\n\n        // Sanitize invalid maximums. An invalid scroll offset won't break the\n        // subsequent .scrollTo() call; however, it will make it harder to\n        // determine if the .scrollTo() method should have been called in the\n        // first place.\n        nextScrollX = Math.max(0, Math.min(maxScrollX, nextScrollX));\n\n        if (nextScrollX !== currentScrollX) {\n          window.scrollTo(nextScrollX, 0);\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n\n    const singleMovieMap = props.moviesListState.map((element, index) => {\n      console.log(\"map\", element);\n      return (\n        <div\n          className={`single-movie${\n            toggleState?.active === index ? \" active\" : \"\"\n          }`}\n          onClick={() => handleClick(index)}\n          key={index}\n        >\n          <div className=\"movie-backdrop\">\n            <img\n              src={`https://image.tmdb.org/t/p/original${element.backdrop_path}`}\n              alt={element.original_title}\n            />\n          </div>\n          <div className=\"movie-title\">{element.original_title}</div>\n        </div>\n      );\n    });\n    return <div className=\"movies-list\">{singleMovieMap}</div>;\n  };\n\n  const loading = () => {\n    return <></>;\n  };\n\n  return props.moviesListState ? loaded() : loading();\n};\n\nexport default SingleMovie;\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":30,"column":6,"nodeType":"49","endLine":30,"endColumn":8,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":15},{"ruleId":"51","severity":1,"message":"55","line":2,"column":17,"nodeType":"53","messageId":"54","endLine":2,"endColumn":23},{"ruleId":"56","severity":1,"message":"57","line":127,"column":15,"nodeType":"53","messageId":"58","endLine":127,"endColumn":24},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getAllMovies'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-unused-vars","'Frame' is defined but never used.","Identifier","unusedVar","'Scroll' is defined but never used.","no-redeclare","'intensity' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [getAllMovies]",{"range":"64","text":"65"},[1180,1182],"[getAllMovies]"]